{"version":3,"sources":["webpack:///./src/templates/project.jsx"],"names":["overlayColor","sample","overlay","Wrapper","styled","props","theme","spacer","horizontal","InformationWrapper","InfoBlock","vertical","Top","Bottom","WrapperContainer","Project","slug","pageContext","postNode","data","markdownRemark","project","frontmatter","title","config","siteTitle","postPath","postSEO","style","backgroundColor","client","date","service","type","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"2FAAA,6KAUMA,EAAeC,IAAOC,KAEtBC,EAAUC,YAAH,8BAAGA,CAAH,4EAKK,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aALjC,wBASPC,EAAqBL,YAAH,0BAAGA,CAAH,0EAOlBM,EAAYN,YAAH,0BAAGA,CAAH,8CAGH,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,WAHzB,KAGqC,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAHjE,OAIT,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAJnB,KAOTI,EAAMR,YAAH,0BAAGA,CAAH,kFAOHS,EAAST,YAAH,0BAAGA,CAAH,mBAINU,EAAmBV,YAAH,0BAAGA,CAAH,uBAoCPW,UAhCC,SAAC,GAAmE,IAAlDC,EAAiD,EAAhEC,YAAeD,KAAgCE,EAAiB,EAAzCC,KAAQC,eAC1CC,EAAUH,EAASI,YACzB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAUF,EAAQE,MAAb,MAAwBC,IAAOC,YAC5C,kBAAC,IAAD,CAAKC,SAAUV,EAAME,SAAUA,EAAUS,SAAO,IAChD,kBAACxB,EAAD,CAASyB,MAAO,CAAEC,gBAAiB7B,IACjC,4BAAKqB,EAAQE,OACb,kBAACd,EAAD,KACE,kBAACC,EAAD,KACE,kBAACE,EAAD,gBACA,kBAACC,EAAD,KAASQ,EAAQS,SAEnB,kBAACpB,EAAD,KACE,kBAACE,EAAD,uBACA,kBAACC,EAAD,KAASQ,EAAQU,OAEnB,kBAACrB,EAAD,KACE,kBAACE,EAAD,iBACA,kBAACC,EAAD,KAASQ,EAAQW,YAIvB,kBAAC,IAAD,CAAWC,KAAK,QACd,kBAACnB,EAAD,KACE,yBAAKoB,wBAAyB,CAAEC,OAAQjB,EAASkB,YAkBpD,IAAMC,EAAS","file":"component---src-templates-project-jsx-344e3ac43cce937f0439.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport { Container, SEO, Layout } from 'components';\nimport sample from 'lodash/sample';\nimport config from '../../config/website';\nimport { overlay } from '../../config/theme';\n\nconst overlayColor = sample(overlay);\n\nconst Wrapper = styled.section`\n  text-align: center;\n  position: relative;\n  width: 100%;\n  color: white;\n  padding: 8rem ${props => props.theme.spacer.horizontal};\n  margin-bottom: 6rem;\n`;\n\nconst InformationWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst InfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: ${props => props.theme.spacer.vertical} ${props => props.theme.spacer.horizontal} 0\n    ${props => props.theme.spacer.horizontal};\n`;\n\nconst Top = styled.div`\n  font-size: 80%;\n  margin-bottom: 0.5rem;\n  position: relative;\n  text-transform: uppercase;\n`;\n\nconst Bottom = styled.div`\n  font-size: 125%;\n`;\n\nconst WrapperContainer = styled.div`\n  text-align: justify;\n`;\n\nconst Project = ({ pageContext: { slug }, data: { markdownRemark: postNode } }) => {\n  const project = postNode.frontmatter;\n  return (\n    <Layout>\n      <Helmet title={`${project.title} | ${config.siteTitle}`} />\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Wrapper style={{ backgroundColor: overlayColor }}>\n        <h1>{project.title}</h1>\n        <InformationWrapper>\n          <InfoBlock>\n            <Top>Company</Top>\n            <Bottom>{project.client}</Bottom>\n          </InfoBlock>\n          <InfoBlock>\n            <Top>Beginning date</Top>\n            <Bottom>{project.date}</Bottom>\n          </InfoBlock>\n          <InfoBlock>\n            <Top>Position</Top>\n            <Bottom>{project.service}</Bottom>\n          </InfoBlock>\n        </InformationWrapper>\n      </Wrapper>\n      <Container type=\"text\">\n        <WrapperContainer>\n          <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n        </WrapperContainer>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Project;\n\nProject.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ProjectPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"YYYY\")\n        client\n        service\n        cover {\n          childImageSharp {\n            resize(width: 800) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}